{"version":3,"sources":["utils/api/index.js","Layout/ErrorAlert.js","components/Decks/form.js","components/Decks/Create/Navbar.js","components/Decks/Create/App.js","components/Decks/Editdeck/Navbar.js","components/Decks/Editdeck/App.js","components/Decks/Deck/Navbar.js","components/Decks/Deck/Showcards.js","components/Decks/Deck/View.js","components/Decks/Study/Navbar.js","components/Decks/Study/NotEnoughCards.js","components/Decks/Study/Showcards.js","components/Decks/Study/App.js","components/Decks/Cards/Form.js","components/Decks/Cards/Add/Navbar.js","components/Decks/Cards/Add/App.js","components/Decks/Cards/Edit/Navbar.js","components/Decks/Cards/Edit/App.js","components/Decks/Cards/App.js","components/Decks/Deck/App.js","components/Decks/App.js","components/Home/createButton.js","components/Home/ShowDecks.js","components/Home/App.js","Layout/Header.js","Layout/NotFound.js","Layout/index.js","App.js","index.js"],"names":["API_BASE_URL","process","headers","Headers","stripCards","deck","cards","fetchJson","url","options","onCancel","a","fetch","response","status","Error","statusText","json","name","console","error","stack","Promise","resolve","listDecks","signal","createDeck","method","body","JSON","stringify","readDeck","deckId","updatedDeck","id","deleteDeck","card","Number","readCard","cardId","updatedCard","append","ErrorAlert","className","Form","his","useHistory","pathname","useLocation","useState","setError","edit","setEdit","setName","description","setDescription","abort","AbortController","newDeckId","Math","max","map","push","message","useEffect","includes","addOrEdit","htmlFor","type","value","placeholder","onChange","event","target","err","rows","onClick","required","updateDeck","Navbar","to","Create","Editdeck","useParams","setDeck","res","getDeck","Showcards","setCards","useRouteMatch","getCards","listing","front","back","e","window","confirm","deleteCard","lastCard","filter","item","View","NotEnoughCards","allCards","length","flip","setFlip","allcards","Study","isEdit","setIsEdit","setFront","setBack","getCard","updateCard","createCard","parseInt","Add","Edit","Cards","path","exact","Deck","Decks","CreateButton","ShowDecks","decks","setDecks","Home","Header","NotFound","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3db2ca52.chunk.js","sourcesContent":["/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:8080\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  default value returned if the fetch is cancelled.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\n\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    return await response.json();\n\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options, updatedDeck);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options, card);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options, updatedCard);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React from \"react\";\n\n/**\n * Defines the alert message to render if the specified error is truthy.\n * @param error\n *  an instance of an object with `.message` property as a string, typically an Error instance.\n * @returns {JSX.Element}\n *  a bootstrap danger alert that contains the message string.\n */\n\nfunction ErrorAlert({ error }) {\n  return (\n  <>\n  {\n    error && (\n      <div className=\"alert alert-danger m-2\">Error: {error}</div>\n    )\n}\n    </>\n  )\n  \n}\n\nexport default ErrorAlert;\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { createDeck, updateDeck, listDecks } from \"../../utils/api/index\";\r\nimport ErrorAlert from \"../../Layout/ErrorAlert\";\r\nfunction Form({ deck }) {\r\n  const his = useHistory();\r\n  const { pathname } = useLocation();\r\n  const [error, setError] = useState();\r\n\r\n  const [edit, setEdit] = useState(true);\r\n  const [name, setName] = useState({ name: \"\" });\r\n  const [description, setDescription] = useState({ description: \"\" });\r\n\r\n  useEffect(() => {\r\n    function addOrEdit() {\r\n      const abort = new AbortController();\r\n      if (pathname.includes(\"edit\")) {\r\n        setName({ name: deck.name });\r\n        setDescription({ description: deck.description }, abort.signal);\r\n      } else {\r\n        setEdit(false);\r\n      }\r\n    }\r\n    addOrEdit();\r\n  }, [deck, pathname]);\r\n\r\n  function handleName(event) {\r\n    const abort = new AbortController();\r\n    try {\r\n      setName({ ...name, name: event.target.value }, abort.signal);\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  function handleDescription(event) {\r\n    const abort = new AbortController();\r\n    try {\r\n      setDescription(\r\n        { ...description, description: event.target.value },\r\n        abort.signal\r\n      );\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async function handleCreate() {\r\n    const abort = new AbortController();\r\n\r\n    try {\r\n      if (name.name === \"\") {\r\n        throw new Error(\"Need a name!!\");\r\n      }\r\n      if (description.description === \"\") {\r\n        throw new Error(\"Need a description!!\");\r\n      }\r\n      await createDeck({ ...name, ...description }, abort.signal);\r\n      const response = await listDecks();\r\n      const newDeckId = Math.max(...response.map((deck) => deck.id));\r\n      his.push(`/decks/${newDeckId}`);\r\n    } catch (err) {\r\n      if (err) setError(err.message);\r\n    }\r\n  }\r\n\r\n  function handleUpdate() {\r\n    const abort = new AbortController();\r\n    try {\r\n      if (name.name === \"\") {\r\n        throw new Error(\"Need a name\");\r\n      }\r\n      if (description.description === \"\") {\r\n        throw new Error(\"Need a description\");\r\n      }\r\n      updateDeck({ id: deck.id, ...name, ...description }, abort.signal);\r\n      his.push(`/decks/${deck.id}`);\r\n    } catch (err) {\r\n      if (err) setError(err.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n            value={name.name || \"\"}\r\n            placeholder={edit ? null : \"Deck Name\"}\r\n            onChange={handleName}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"description\">Description:</label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"description\"\r\n            rows=\"3\"\r\n            value={description.description || \"\"}\r\n            placeholder={edit ? null : \"Brief Description of Deck\"}\r\n            onChange={handleDescription}\r\n          >\r\n            {\" \"}\r\n          </textarea>\r\n        </div>\r\n        <div>\r\n          <ErrorAlert error={error} />\r\n        </div>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary mr-1\"\r\n          onClick={() => his.push(edit ? `/decks/${deck.id}` : \"/\")}\r\n          required\r\n        >\r\n          Cancel\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={edit ? handleUpdate : handleCreate}\r\n          required\r\n        >\r\n          Create\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport {Link } from 'react-router-dom';\r\n\r\n\r\n//DONE AND WORKS\r\nfunction Navbar() {\r\n  return <div className = \"container\">\r\n   <nav aria-label=\"breadcrumb\">\r\n  <ol className=\"breadcrumb\">\r\n    <li className=\"breadcrumb-item active\" ><Link to=\"/\">Home</Link></li>\r\n    <li className=\"breadcrumb-item active\">Create Deck</li>\r\n  </ol>\r\n</nav>   \r\n\r\n  </div>;\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport Form from '../form';\r\nimport Navbar from './Navbar';\r\n\r\nfunction Create() {\r\n  return (<div className='container'>\r\n    <Navbar/>\r\n    <h2>Create Deck</h2>\r\n    <Form/>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Create;\r\n","import React from 'react';\r\nimport {Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nfunction Navbar({deck}) {\r\n\r\n\r\n  return( \r\n  <div>\r\n  <nav aria-label=\"breadcrumb\">\r\n    <ol className=\"breadcrumb\">\r\n      <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n      <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link to={`/decks/${deck.id}`}>{deck.name}</Link></li>\r\n      <li className=\"breadcrumb-item active\" aria-current=\"page\">Edit Deck</li>\r\n    </ol>\r\n  </nav>\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Form from \"../form\";\r\nimport Navbar from \"./Navbar\";\r\nimport { readDeck } from \"../../../utils/api\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nfunction Editdeck() {\r\n  const { deckId } = useParams();\r\n  const [deck, setDeck] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getDeck() {\r\n      const res = await readDeck(deckId);\r\n      setDeck(res);\r\n    }\r\n    getDeck();\r\n  }, [deckId]);\r\n\r\n  if (!deck) return null;\r\n  return (\r\n    <div>\r\n      <Navbar deck={deck} />\r\n      <h2>Edit Deck</h2>\r\n      <Form deck={deck} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editdeck;\r\n","import React from 'react';\r\nimport {Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nfunction Navbar({deck}) {\r\n\r\n\r\n  return( \r\n  <div>\r\n  <nav aria-label=\"breadcrumb\">\r\n    <ol className=\"breadcrumb\">\r\n      <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n      <li className=\"breadcrumb-item active\" aria-current=\"page\">{deck.name}</li>\r\n    </ol>\r\n  </nav>\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { Link, useHistory,} from \"react-router-dom\";\r\n\r\nimport { deleteCard, readDeck } from \"../../../utils/api/index\";\r\n\r\nfunction Showcards({ deck }) {\r\n  const [cards, setCards] = useState(null);\r\n  const his = useHistory();\r\n  const { url } = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    async function getCards() {\r\n      const res = await readDeck(deck.id);\r\n      setCards(res.cards);\r\n    }\r\n    getCards();\r\n  }, [deck.id]);\r\n\r\n  if (!cards) return null;\r\n\r\n  const listing = cards.map((card) => {\r\n    function handleDelete(e) {\r\n      if (window.confirm(\" Delete this card ?\")) {\r\n        deleteCard(card.id);\r\n        setCards((lastCard) => {\r\n          const newCard = lastCard.filter((item) => item.id !== card.id);\r\n          return newCard;\r\n        });\r\n      } else {\r\n        his.push(`${url}`);\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div key={card.id}>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <p className=\"card-text\">\r\n              Side A : <span>{card.front}</span>\r\n            </p>\r\n            <p className=\"card-text\">\r\n              Side B : <span>{card.back}</span>{\" \"}\r\n            </p>\r\n            <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n              <Link\r\n                to={`${url}/cards/${card.id}/edit`}\r\n                className=\"btn btn-secondary mr-1\"\r\n              >\r\n                Edit\r\n              </Link>\r\n              <button onClick={handleDelete} className=\"btn btn-danger\">\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <div>{listing}</div>;\r\n}\r\n\r\nexport default Showcards;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useRouteMatch, useParams } from \"react-router-dom\";\r\nimport { deleteDeck, readDeck } from \"../../../utils/api\";\r\nimport Showcards from \"./Showcards\";\r\n\r\nfunction View() {\r\n  const his = useHistory();\r\n  const { url } = useRouteMatch();\r\n\r\n  const { deckId } = useParams();\r\n  const [deck, setDeck] = useState(null);\r\n  useEffect(() => {\r\n    async function getDeck() {\r\n      const res = await readDeck(deckId);\r\n      setDeck(res);\r\n    }\r\n    getDeck();\r\n  }, [deckId]);\r\n\r\n  if (!deck) return null;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"col-sm-12 p-0\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{deck.name}</h5>\r\n            <p className=\"card-text\">{deck.description}</p>\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div>\r\n                <Link to={`${url}/edit`} className=\"btn btn-secondary mr-1\">\r\n                  Edit\r\n                </Link>\r\n                <Link to={`${url}/study`} className=\"btn btn-primary mr-1\">\r\n                  Study\r\n                </Link>\r\n                <Link to={`${url}/cards/new`} className=\"btn btn-primary\">\r\n                  Add Cards\r\n                </Link>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => {\r\n                    if (\r\n                      window.confirm(\r\n                        \"Are you sure you want to delete this deck?\"\r\n                      )\r\n                    ) {\r\n                      deleteDeck(deck.id);\r\n                      his.push(\"/\");\r\n                    } else {\r\n                      his.push(`${url}`);\r\n                    }\r\n                  }}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <h1>Cards</h1>\r\n      </div>\r\n      <Showcards deck={deck} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default View;\r\n","import React from 'react';\r\nimport {Link } from 'react-router-dom';\r\n\r\n\r\n//DONE AND WORKS\r\nfunction Navbar({deck}) {\r\n  return <div className = \" container\">\r\n   <nav aria-label=\"breadcrumb\">\r\n  <ol className =\"breadcrumb\">\r\n    <li className=\"breadcrumb-item active\" ><Link to=\"/\">Home</Link></li>\r\n    <li className=\"breadcrumb-item active\"><Link to={`/decks/${deck.id}`}>{deck.name}</Link></li>\r\n    <li className =\"breadcrumb-item active\">Study</li>\r\n  </ol>\r\n</nav>   \r\n\r\n  </div>;\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nfunction NotEnoughCards({ allCards=[] }) {\r\n  const { deckId } = useParams();\r\n  return (\r\n    <div>\r\n      <h2>Not enough cards!</h2>\r\n      <p>\r\n        You need at least 3 cards to study. There are {allCards.length} in this\r\n        deck.\r\n      </p>\r\n      <Link\r\n        to={`/decks/${deckId}/cards/new`}\r\n        type=\"button\"\r\n        className=\"btn btn-primary\"\r\n      >\r\n        Add Cards\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotEnoughCards;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NotEnoughCards from \"./NotEnoughCards\";\r\n\r\nfunction Showcards({ deck }) {\r\n  const [cards, setCards] = useState(0);\r\n  const [flip, setFlip] = useState(true);\r\n  const his = useHistory();\r\n  const allCards = deck.cards;\r\n\r\n  const handleNext = () => {\r\n    setCards((card) => card + 1);\r\n    setFlip(true);\r\n    if (cards === allCards.length - 1) {\r\n      return window.confirm(\"Do you want to reset cars ?\")\r\n        ? setCards(0)\r\n        : his.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const handleFlip = () => {\r\n    setFlip(!flip);\r\n  };\r\n  if (allCards.length < 3) {\r\n    return <NotEnoughCards allcards={allCards} />;\r\n  }\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <h2 className=\"card-title\">\r\n          Card {cards + 1} of {allCards.length}\r\n        </h2>\r\n        <div>\r\n          <p>{flip ? allCards[cards].front : allCards[cards].back}</p>\r\n          <button className=\"btn btn-primary mr-1\" onClick={handleFlip}>\r\n            Flip\r\n          </button>\r\n\r\n          {!flip ? (\r\n            <button className=\"btn btn-primary\" onClick={handleNext}>\r\n              Next\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Showcards;\r\n","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams, } from 'react-router-dom';\r\nimport { readDeck } from \"../../../utils/api\";\r\nimport Navbar from './Navbar';\r\nimport Showcards from './Showcards';\r\n\r\nfunction Study() {\r\nconst {deckId}= useParams();\r\nconst [deck,setDeck] = useState(null)\r\n\r\nuseEffect(() => {\r\n    async function getDeck() {\r\n      const res = await readDeck(deckId);\r\n      setDeck(res);\r\n      \r\n    }\r\n    getDeck()\r\n  },[deckId]);\r\n\r\nif(!deck) return null\r\n  return <div>\r\n      <Navbar deck = {deck} />\r\n      <h2>{`${deck.name}: Study`}</h2>\r\n      <Showcards deck={deck} />\r\n      \r\n      \r\n  </div>;\r\n}\r\n\r\nexport default Study;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { createCard, updateCard, readCard } from \"../../../utils/api\";\r\nimport ErrorAlert from \"../../../Layout/ErrorAlert\"\r\n\r\nfunction Form({ deck }) {\r\n  const his = useHistory();\r\n  const { cardId, deckId } = useParams();\r\n  const { pathname } = useLocation();\r\n  \r\n\r\n  const [isEdit, setIsEdit] = useState(null);\r\n  const [front, setFront] = useState({ front: \"\" });\r\n  const [back, setBack] = useState({ back: \"\" });\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    async function getCard() {\r\n      const res = await readCard(cardId);\r\n      setFront({ front: res.front });\r\n      setBack({ back: res.back });\r\n    }\r\n    function addOrEdit() {\r\n      if (pathname.includes(\"new\")) {\r\n        setIsEdit(false);\r\n      } else {\r\n        setIsEdit(true);\r\n        getCard();\r\n      }\r\n    }\r\n    addOrEdit();\r\n  }, [pathname, cardId]);\r\n\r\n  function handleFront(event) {\r\n    setFront({ ...front, front: event.target.value });\r\n  }\r\n\r\n  function handleBack(event) {\r\n    setBack({ ...back, back: event.target.value });\r\n  }\r\n\r\n  function handleCancelAndDone() {\r\n    his.push(`/decks/${deckId}`);\r\n  }\r\n\r\n  function handleUpdate() {\r\n    try {\r\n     \r\n      if(front.front === \"\"){\r\n        throw new Error(\"Need a  front card name!!\")\r\n      }if(back.back===\"\"){\r\n        throw new Error(\"Need a back card name!!\")\r\n      }\r\n    updateCard({ id: cardId, deckId: deck.id, ...front, ...back });\r\n    his.push(`/decks/${deck.id}`);\r\n    }\r\n    catch (err) {\r\n      if(err)setError(err.message)\r\n    }\r\n  }\r\n\r\n  function handleSave() {\r\n    try {\r\n     \r\n      if(front.front === \"\"){\r\n        throw new Error(\"Need a  front card name!!\")\r\n      }if(back.back===\"\"){\r\n        throw new Error(\"Need a back card name!!\")\r\n      }\r\n    createCard(parseInt(deckId), { ...front, ...back });\r\n    his.push(`/decks/${deck.id}`);\r\n    setFront({ front: \"\" });\r\n    setBack({ back: \"\" });\r\n    }\r\n    catch (err) {\r\n      if(err)setError(err.message)\r\n    }\r\n    \r\n  }\r\n\r\n  if (!front || !back) return null;\r\n  return (\r\n    <>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"front\">Front:</label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"front\"\r\n            rows=\"4\"\r\n            placeholder={isEdit ? null : \"Front side of card\"}\r\n            value={front.front}\r\n            onChange={handleFront}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"back\">Back:</label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"back\"\r\n            rows=\"4\"\r\n            placeholder={isEdit ? null : \"Back side of card\"}\r\n            value={back.back}\r\n            onChange={handleBack}\r\n          ></textarea>\r\n        </div>\r\n        <div>\r\n        <ErrorAlert error={error} />\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary mr-1\"\r\n          onClick={handleCancelAndDone}\r\n        >\r\n          {isEdit ? \"Cancel\" : \"Done\"}\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={isEdit ? handleUpdate : handleSave}\r\n        >\r\n          Save\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport {Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nfunction Navbar({deck}) {\r\n\r\n\r\n  return( \r\n  <div>\r\n  <nav aria-label=\"breadcrumb\">\r\n    <ol className=\"breadcrumb\">\r\n      <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n      <li className=\"breadcrumb-item\" ><Link to={`/decks/${deck.id}`}>{deck.name}</Link></li>\r\n      <li className=\"breadcrumb-item active\" aria-current=\"page\">Add Card</li>\r\n    </ol>\r\n  </nav>\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport Form from '../Form';\r\nimport Navbar from './Navbar';\r\n\r\nfunction Add({deck}) {\r\n  return (<div>\r\n      <Navbar deck={deck}/>\r\n      <h1>{`${deck.name}: Add Card`}</h1>\r\n      <Form deck={deck}/>\r\n\r\n  </div>);\r\n}\r\n\r\nexport default Add;\r\n","import React from 'react';\r\nimport {Link ,useParams} from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nfunction Navbar({deck}) {\r\n    const {cardId} = useParams();\r\n\r\n  return( \r\n  <div>\r\n  <nav aria-label=\"breadcrumb\">\r\n    <ol className=\"breadcrumb\">\r\n      <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n      <li className=\"breadcrumb-item\"><Link to={`/decks/${deck.id}`}>{deck.name}</Link></li>\r\n      <li className=\"breadcrumb-item active\" aria-current=\"page\">{`Edit Card ${cardId}`}</li>\r\n    </ol>\r\n  </nav>\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport Form from '../Form';\r\nimport Navbar from './Navbar';\r\n\r\nfunction Edit({deck}) {\r\n  return (\r\n  <div>\r\n<Navbar deck={deck}/>\r\n<h2>Edit Card</h2>\r\n<Form deck={deck}/>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Edit;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Add from \"./Add/App\";\r\nimport { useRouteMatch, useParams } from \"react-router-dom\";\r\n\r\nimport Edit from \"./Edit/App\";\r\nimport { readDeck } from \"../../../utils/api\";\r\n\r\n\r\nfunction Cards() {\r\n  const { deckId } = useParams();\r\n  const [deck, setDeck] = useState(null);\r\n  const { path } = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    async function getDeck() {\r\n      const res = await readDeck(deckId);\r\n      setDeck(res);\r\n    }\r\n    getDeck();\r\n  }, [deckId]);\r\n\r\n  if (!deck) return null;\r\n\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path={`${path}/new`}>\r\n          <Add deck={deck} />\r\n        </Route>\r\n        <Route path={`${path}/:cardId/edit`}>\r\n          <Edit deck={deck} />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { Switch, useParams, Route } from \"react-router-dom\";\r\nimport { readDeck } from \"./../../../utils/api/index\";\r\nimport Editdeck from \"../Editdeck/App\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nimport View from \"./View\";\r\nimport Study from \"../Study/App\";\r\nimport Cards from \"../Cards/App\";\r\n\r\nfunction Deck() {\r\n  const {deckId} = useParams();\r\n  const [deck, setDeck] = useState(null);\r\n  const {path } = useRouteMatch();\r\n  useEffect(() => {\r\n    async function getDeck() {\r\n      const res = await readDeck(deckId);\r\n      setDeck(res);\r\n    }\r\n    getDeck();\r\n  }, [deckId]);\r\n\r\n  if (!deck) return null;\r\n\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path={`${path }`}>\r\n          <Navbar deck={deck} />\r\n          <View deck={deck} />\r\n          \r\n        \r\n        </Route>\r\n        <Route path={`${path }/study`}>\r\n          <Study />\r\n        </Route>\r\n        <Route path={`${path }/edit`}>\r\n          <Editdeck />\r\n        </Route>\r\n        <Route path={`${path }/cards`}>\r\n          <Cards />\r\n        </Route>\r\n      \r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Deck;\r\n","import React from \"react\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Create from \"./Create/App\";\r\nimport Deck from \"./Deck/App\";\r\n\r\n\r\n\r\nfunction Decks() {\r\n \r\n  return (\r\n    <div className=\"container\">\r\n      <Switch>\r\n    \r\n        <Route path=\"/decks/new\">\r\n          <Create />\r\n        </Route>\r\n        <Route path=\"/decks/:deckId\">\r\n          <Deck />\r\n        </Route>\r\n       \r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Decks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CreateButton() {\r\n  return (\r\n    <div className=\"col-sm-5 mb-2\">\r\n      <Link to=\"/decks/new\" className=\"btn btn-primary\">\r\n        Create Deck\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { listDecks, deleteDeck } from \"../../utils/api/index\";\r\n\r\nfunction ShowDecks() {\r\n  const [decks, setDecks] = useState([]);\r\n  const his = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function getDeck() {\r\n      const res = await listDecks();\r\n      setDecks(res);\r\n    }\r\n    getDeck();\r\n  }, []);\r\n\r\n  const listing = decks.map((deck) => {\r\n    function handleDelete(e) {\r\n      if (window.confirm(\" Delete this deck?\")) {\r\n        deleteDeck(deck.id);\r\n        setDecks((lastCard) => {\r\n          const newCard = lastCard.filter((item) => item.id !== deck.id);\r\n          return newCard;\r\n        });\r\n        his.push(\"/\");\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"card\" key={deck.id}>\r\n        <div className=\"card-body\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <h4 className=\"card-title\"> {deck.name}</h4>\r\n            <p>{`${deck.cards.length} cards`}</p>\r\n          </div>\r\n          <p className=\"card-text\"> {deck.description} </p>\r\n          <div className=\"d-flex justify-content-between\">\r\n            <div>\r\n              <Link to={`/decks/${deck.id}`} className=\"btn btn-primary mr-1\">\r\n                View\r\n              </Link>\r\n              <Link to={`/decks/${deck.id}/study`} className=\"btn btn-success\">\r\n                Study\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <button className=\"btn btn-danger \" onClick={handleDelete}>\r\n                Delete Deck\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <div>{listing}</div>;\r\n}\r\n\r\nexport default ShowDecks;\r\n","import React from \"react\";\r\nimport CreateButton from \"./createButton\";\r\nimport ShowDecks from \"./ShowDecks\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"container\">\r\n      <CreateButton />\r\n      <ShowDecks />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport {Route,Switch } from 'react-router-dom';\nimport Decks from \"../components/Decks/App\";\nimport Home from \"../components/Home/App\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\n\nfunction Layout() {\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n      <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path= \"/decks\">\n            <Decks/>\n          </Route>\n          \n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}